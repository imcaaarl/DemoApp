// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserSvc.Data;

#nullable disable

namespace UserSvc.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230824030111_addTableAndFields")]
    partial class addTableAndFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UserSvc.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateLastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ModifiedBy_Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId")
                        .IsUnique();

                    b.HasIndex("UserTypeId");

                    b.ToTable("tblusers");
                });

            modelBuilder.Entity("UserSvc.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateLastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy_Id")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserRoleCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbluserroles");
                });

            modelBuilder.Entity("UserSvc.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserTypeCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblusertypes");
                });

            modelBuilder.Entity("UserSvc.Models.User", b =>
                {
                    b.HasOne("UserSvc.Models.UserRole", "tbluserroles")
                        .WithOne("tblusers")
                        .HasForeignKey("UserSvc.Models.User", "UserRoleId");

                    b.HasOne("UserSvc.Models.UserType", "tblusertypes")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbluserroles");

                    b.Navigation("tblusertypes");
                });

            modelBuilder.Entity("UserSvc.Models.UserRole", b =>
                {
                    b.Navigation("tblusers")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
